#################################
# Trigger = github action
# executeion happens on the github side
#################################
name: 'Streamlit-test GCP Cloud Run Deployment'

on:
  push:
    paths:
    - 'streamlit-test/**'                     #config-here
    branches:
    - main
    - dev
  #pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


env:
  #sport: test
  SERVICE: streamlit-test                      #config-here
  IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT }}/streamlit-test-image

##################################################################################################
# No changes below here
##################################################################################################
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  set_env:
    runs-on: ubuntu-latest
    steps:
      - name: Some check on branch
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          echo "::set-output name=env_name::${GITHUB_REF#refs/heads/}"
         
      #- name: Use variable setup in previous step
      #  run: echo "I'm using variable ${{ steps.branch_check.outputs.env_name }}"
  
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }} # job output ... consumed by next job

  deploy:
    needs: [set_env] #orchestrates set_env job to run before terraform_deployment
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    environment: ${{ needs.set_env.outputs.env_name }}
    #env:
    #  IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT }}/streamlit-test2-image
    #  #{{ $service }}
    #defaults:
    #  run:
    #    working-directory: ./server
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        #shell: bash
        working-directory: ${{ env.SERVICE }} # set the folder to pull code from

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
    
    - name: Configure Docker
      run: gcloud auth configure-docker --quiet

    #- name: Checkout repository
    #  uses: actions/checkout@v2

    - name: Build Docker image
      run: docker build . -t $IMAGE_NAME

    #- name: Test Docker image
    #  run: docker run $IMAGE_NAME sh -c "go test -v"

    - name: Push Docker image
      run: docker push $IMAGE_NAME

    - name: Deploy Docker image
      run: gcloud run deploy ${{ env.SERVICE }} ${{ secrets.GCP_PROJECT_ID }} --image $IMAGE_NAME --region us-central1 --platform managed

